@model LeagueExpress.Models.MatchSchedule

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MatchSchedule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.matchWeek, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.matchWeek, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.matchWeek, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.matchDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.matchDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.matchDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.matchTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.matchTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.matchTime, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            @Html.LabelFor(model => model.matchHomeTeam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.matchHomeTeam, new SelectList(new List<object>
                {
                       new {value = "", text = ""},
                       new {value = "Green", text = "Green"},
                       new {value = "Purple", text = "Purple" },
                       new {value = "White", text = "White" },
                       new {value = "Yellow", text = "Yellow" },
                       new {value = "Black", text = "Black" },
                       new {value = "Red", text = "Red" },
                       new {value = "Navy Blue", text = "Navy Blue" },
                       new {value = "Grey", text = "Grey" },
                       new {value = "Light Blue", text = "Light Blue" },
                       new {value = "Free Agent", text = "Free Agent"}
                },
                   "value",
                   "text",
                   2
                ), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.matchHomeTeam, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.matchAwayTeam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.matchAwayTeam, new SelectList(new List<object>
                {
                       new {value = "", text = ""},
                       new {value = "Green", text = "Green"},
                       new {value = "Purple", text = "Purple" },
                       new {value = "White", text = "White" },
                       new {value = "Yellow", text = "Yellow" },
                       new {value = "Black", text = "Black" },
                       new {value = "Red", text = "Red" },
                       new {value = "Navy Blue", text = "Navy Blue" },
                       new {value = "Grey", text = "Grey" },
                       new {value = "Light Blue", text = "Light Blue" },
                       new {value = "Free Agent", text = "Free Agent"}
                },
                   "value",
                   "text",
                   2
                ), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.matchAwayTeam, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            @Html.LabelFor(model => model.matchHomeResult, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.matchHomeResult, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.matchHomeResult, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.matchAwayResult, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.matchAwayResult, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.matchAwayResult, "", new { @class = "text-danger" })
            </div>
        </div>


        @Html.LabelFor(model => model.matchStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.matchStatus, new SelectList(new List<object>
                {
                       new {value = "not started", text = "not started"},
                       new {value = "playing", text = "playing"},
                       new {value = "completed", text = "completed"}
                },
                   "value",
                   "text",
                   2
                ), htmlAttributes: new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.matchStatus, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
