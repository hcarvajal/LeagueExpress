@model LeagueExpress.Models.Player

@{
    ViewBag.Title = "Register";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Register Player</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("First Name:", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playerFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playerFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playerLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playerLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Middle Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playerMiddileName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playerMiddileName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.playerHasPlayed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.playerHasPlayed, new SelectList(new List<object>
                {
                       new {value = 0, text = "No"},
                       new {value = 1, text = "Yes" }
                },
                   "value",
                   "text",
                   2
                ),htmlAttributes: new { @class = "form-control" })
                
                @Html.ValidationMessageFor(model => model.playerHasPlayed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.playerAge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playerAge, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playerAge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.playerPlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playerPlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playerPlaceOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.currentTeam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.currentTeam, new SelectList(new List<object>
                {
                       new {value = "", text = ""},
                       new {value = "Green", text = "Green"},
                       new {value = "Purple", text = "Purple" },
                       new {value = "White", text = "White" },
                       new {value = "Yellow", text = "Yellow" },
                       new {value = "Black", text = "Black" },
                       new {value = "Red", text = "Red" },
                       new {value = "Navy Blue", text = "Navy Blue" },
                       new {value = "Grey", text = "Grey" },
                       new {value = "Light Blue", text = "Light Blue" },
                       new {value = "Free Agent", text = "Free Agent"}
                },
                   "value",
                   "text",
                   2
                ), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.currentTeam, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.playerPosition,htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.playerPosition,new SelectList(new List<object>
               {
                 new {value = "Forward", text = "Forward"},
                 new {value = "Midfield", text = "Midfield"},
                 new {value = "Defender", text = "Defender"},
               },
               "value",
               "text"
               ), htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.playerShirtSize, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.playerShirtSize,new SelectList(new List<object>
                {
                  new {value = "small" , text = "small"},
                  new {value = "medium", text = "medium"},
                  new {value = "large", text = "large"},
                  new {value = "x-large", text = "x-large"},
                },
                "value",
                "text"
               ), htmlAttributes: new { @class = "form-control" }) 
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.playerEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playerEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playerEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.playerPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playerPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playerPhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
